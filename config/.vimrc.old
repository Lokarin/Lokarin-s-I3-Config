" Plug
call plug#begin('~/.vim/plugged')  
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'xuhdev/vim-latex-live-preview', { 'for': 'tex' }
Plug 'lukas-reineke/indent-blankline.nvim'
call plug#end()

filetype plugin on

inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm(): "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
inoremap <silent><expr> <c-@> coc#refresh()

" linhas de indentação
lua << EOF
require("ibl").setup({
    indent = {
        char = "│",
    },
    scope = {
        enabled = true
    }
})
EOF

" set
set nocompatible
syntax on
set encoding=utf-8
set number relativenumber
set wildmode=longest,list,full
set ttyfast
set lazyredraw
set termguicolors


" Background Transparency
colorscheme retrobox
highlight Normal guibg=none
highlight NonText guibg=none
highlight Normal ctermbg=none
highlight NonText ctermbg=none


" g++
function! CompileCpp()
    " Salva o arquivo antes de compilar
    write
    
    let l:outfile = expand('%:p:r')
    let l:compile_command = 'g++ ' . expand('%:p') . ' -o ' . l:outfile
    
    let l:result = system(l:compile_command)
    
    if v:shell_error
        echo "Erro na compilação:"
        echo l:result
    else
        echo "Compilação bem-sucedida!"
    endif
endfunction

" Mapeia <leader>c para compilação de C++
nnoremap <leader>c :call CompileCpp()<CR>
